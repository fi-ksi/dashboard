#!/usr/bin/env python3

import os
import sys
import re
from shutil import copyfile
import nbformat
from nbconvert import HTMLExporter
from nbconvert.preprocessors import ExecutePreprocessor
from datetime import datetime


def get_monitoring_notebook_template_path():
    path = os.path.join(
        settings.REPO_DIR, 'backend', 'monitoring', 'notebooks',
        'monitoring_template.ipynb')
    return path


def get_monitoring_notebook_output_path(datestamp, ext='ipynb'):
    notebook_name = 'monitoring_{datestamp}.{ext}'.format(
        datestamp=datestamp, ext=ext)
    path = os.path.join(settings.EXPORTS_DIR, notebook_name)
    return path


def run_notebook(notebook):
    # See http://nbconvert.readthedocs.io/en/latest/execute_api.html
    ep = ExecutePreprocessor(timeout=120)
    ep.preprocess(notebook, {'metadata': {'path': '.'}})


def export_notebook_to_html(notebook, output_path):
    html_exporter = HTMLExporter()
    html_exporter.template_file='ksi-py3-venv/lib/python3.7/site-packages/'\
        'jupyter_contrib_nbextensions/templates/nbextensions.tpl'
    html, _resources = html_exporter.from_notebook_node(notebook)
    with open(output_path, 'wt') as outfile:
        outfile.write(html)


if __name__ == '__main__':
    if len(sys.argv) < 3:
        sys.stderr.write('Usage: export_monitoring_notebook notebook output\n')
        sys.exit(1)

    template_path, output_path = sys.argv[1:3]
    with open(template_path) as infile:
        notebook = nbformat.read(infile, as_version=nbformat.NO_CONVERT)
    notebook['metadata']['hide_input'] = True
    run_notebook(notebook)
    export_notebook_to_html(notebook, output_path)
